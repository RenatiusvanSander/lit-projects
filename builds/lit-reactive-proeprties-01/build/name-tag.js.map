{"version":3,"file":"name-tag.js","sourceRoot":"","sources":["../src/name-tag.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACtC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAM,OAAO,GAAb,MAAM,OAAQ,SAAQ,UAAU;IAIrB,MAAM;QACb,OAAO,IAAI,CAAA,aAAa,IAAI,CAAC,IAAI,GAAG,CAAC;IACvC,CAAC;CACF,CAAA;AALC;IADC,QAAQ,EAAE;qCACG;AAFV,OAAO;IADZ,aAAa,CAAC,UAAU,CAAC;GACpB,OAAO,CAOZ;AAQD,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAC/C,GAAG,CAAC,IAAI,GAAG,yBAAyB,CAAC;AACrC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC","sourcesContent":["import { LitElement, html} from \"lit\";\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('name-tag')\r\nclass NameTag extends LitElement {\r\n  @property()\r\n  name?: string;\r\n\r\n  override render() {\r\n    return html`Hello I'm ${this.name}.`;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'name-tag': NameTag\r\n  }\r\n}\r\n\r\nconst tag = document.createElement('name-tag');\r\ntag.name = 'dynamically initiliazed';\r\ndocument.body.appendChild(tag);"]}