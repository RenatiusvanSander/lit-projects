{"version":3,"file":"events-02.js","sourceRoot":"","sources":["../src/events-02.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAGnD,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAKtC;QACE,KAAK,EAAE,CAAC;QAJE,aAAQ,GAAG,EAAE,CAAC;QAEd,eAAU,GAAG,EAAE,CAAC;QAG1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAC3B,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAI,CAAC,CAAC,MAAkB,CAAC,SAAS,CAAC,CAAC;IACnE,CAAC;IAEkB,gBAAgB;QACjC,MAAM,IAAI,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAC3B,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,GAAI,CAAC,CAAC,MAAkB,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAO,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,aAAa,CAAC,CAAQ;QAC3B,IAAI,CAAC,QAAQ,GAAI,CAAC,CAAC,MAAkB,CAAC,SAAS,CAAC;QAChD,IAAI,CAAC,UAAU,GAAI,CAAC,CAAC,MAAkB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACjE,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA;;+CAEgC,IAAI,CAAC,aAAa;6BACpC,IAAI,CAAC,QAAQ;0BAChB,IAAI,CAAC,UAAU;KACpC,CAAC;IACJ,CAAC;CACF,CAAA;AA9Ba;IAAX,QAAQ,EAAE;0CAAe;AAEd;IAAX,QAAQ,EAAE;4CAAiB;AAJjB,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAgCpB","sourcesContent":["import {LitElement, html} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('events-02')\r\nexport class Events02 extends LitElement {\r\n\r\n  @property() hostName = '';\r\n  \r\n  @property() shadowName = '';\r\n  constructor() {\r\n    super();\r\n    this.addEventListener('click',\r\n      (e: Event) => this.hostName = (e.target as Element).localName);\r\n  }\r\n\r\n  protected override createRenderRoot() {\r\n    const root = super.createRenderRoot();\r\n    root.addEventListener('click',\r\n      (e: Event) => this.shadowName = (e.target as Element).localName);\r\n    root.addEventListener('click', (e:Event) => this._resetHandler(e));\r\n    return root;\r\n  }\r\n\r\n  public _resetHandler(e: Event) {\r\n    this.hostName = (e.target as Element).localName;\r\n    this.shadowName = (e.target as Element).clientWidth.toString();\r\n  }\r\n\r\n  protected override render() {\r\n    return html`\r\n      <p><button>Click Me!</button></p>\r\n      <p><button name=\"resethandler\" @click=\"${this._resetHandler}\">Reset Me!</button></p>\r\n      <p>Component target: ${this.hostName}</p>\r\n      <p>Shadow target: ${this.shadowName}</p>\r\n    `;\r\n  }\r\n}"]}